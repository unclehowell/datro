.TH mkusb 8 "April 13, 2016" "version 10.6.3" "MaKe USB boot device"

.SH NAME
mkusb, mkusb-nox - MaKe USB boot device

.SH SYNOPSIS
.B mkusb
[input] [optional parameters]

.B mkusb
[-option]

input - source file or token for wiping

Optional parameters 'all' or 'p' or both should be entered after the input file.

Without any parameter,
.B mkusb
will let you select the input file interactively via menus.
.P
The target device is always selected and or confirmed interactively.

.B mkusb-nox
<input> [second parameter]

.B mkusb-nox
[-option]

input - source file or token for wiping - mandatory input for
.B mkusb-nox

The only optional second parameter 'all' should be entered after the input file.

.SH DESCRIPTION - mkusb
.B mkusb
- MaKe USB boot device - is a
.B bash shell-script
that can make a boot device from a source file and a mass storage device, 
typically a USB pendrive. Hybrid iso files (post-processed with 
isohybrid) or image files from working systems should be used. 
Current Ubuntu iso files work (except Ubuntu 12.04 mini.iso).
.PP
mkusb reads input from the following source file types
.PP
- ISO files (CD/DVD image files), 'file.iso'
.PP
- general image files, 'file.img'
.PP
- xz compressed image files, 'file.img.xz'
.PP
- gzip compressed image files, 'file.img.gz'
.PP
and writes to a mass storage device,
.B cloning
with 
.B dd
under the hood. mkusb makes the process safer by supplying an
.B interactive tool
to select the target device.
.PP
Beyond standard linux commands and programs, mkusb
.PP
- needs
.B zenity xterm
.PP
- wants
.B pv wmctrl
.PP
- needs (only to make persistent live drives)
.B gdisk grub-pc
.PP
- suggests
.B gparted
(as a general tool to edit partitions after wiping)
.PP
and needs a graphical desktop, while mkusb-nox can run in a text screen.
.PP
mkusb is described at the following
.B wiki page
.PP
<https://help.ubuntu.com/community/mkusb>

.TP 4
.B Work flow (zenity window sequences)
.TP 4
.B Installing new system
menu: Starter menu (--> select source)
.br
file selector: Select source file 
.br
menu: Back at Starter menu (--> toggle live-only / persistent-live)
.br
menu: Back at Starter menu (--> install)
.br
Notice and overview
.br
menu: Select device - and go ahead
.br
Final checkpoint
.br
[if persistent live,
.br
menu: 'boot system'
.br
menu: 'partition table'
.br
input box: 'percentage for persistence']
.br
Work done
.TP 4
.B 'Isotesting' (when automatic identification of target drive)
{menu: Starter menu (--> select source)
.br
file selector: Select source file; or use default source file}
.br
menu: Starter menu (--> install)
.br
Directly to the final checkpoint
.br
Recloned
.TP 4
.B Wiping
.br
menu: Starter menu (--> wipe)
.br
menu: Wipe menu (--> select an option)
.br
Notice and overview
.br
menu: Select device - and go ahead
.br
Final checkpoint
.br
[if partition table created, some extra dialogue windows]
.br
Work done

.SH DESCRIPTION - mkusb-nox

.B mkusb-nox
- is a bash shell-script that works in text screens (and terminal windows),
and can run in a bash shell without any extra package. The interface is
very simple, but this version can do what the GUI version mkusb can do (except
persistent live drives and restoring file systems). The only 'advanced
features' are ANSI control sequences for inverse video, but the script will
work also without interpretation of ANSI inverse video.

.SH OPTIONS
.B [input]
.TP 4
.B file.ext
mkusb is sensitive to the file extension. Valid extensions
are 'iso', 'img', 'img.xz', 'img.gz'
.TP 4
.B /dev/xxx
mkusb can clone from a block device when specified as a parameter in the
command line. The device '/dev/sr0' is often pointing to the CD/DVD drive
in Ubuntu, but check it and point to the relevant device.
.TP 4
.B wipe
mkusb uses the token to bring you to the
.B wipe menu
where you can select several options, either only wiping or wiping plus
creating a partition table and some partition(s) and file system(s)
.br

.br
Standard: create MSDOS partition table with FAT32 partition
.br
Big drive: create GUID partition table with NTFS partition
.br
General: use 'gparted' to make partition table and partition(s)
.br
Advanced: create GUID partition table (skeleton for installing OS)
.br
wipe the First megabyte (mibibyte)
.br
wipe the Whole device - consider other options except for special cases
.TP 4
.B wipe-1
mkusb uses the token to wipe the first megabyte (actually 
first mibibyte) of the target device to wipe traces that 
can disturb the function.
.TP 4
.B wipe-whole-device
mkusb uses the token to wipe the whole device (using dd).
There are several better tools to wipe a device, e.g. DBAN
and hdparm.
.TP 4
.B [optional parameters]
Optional parameters are entered at the end of the command line
.TP 4
.B p
causes mkusb to install a
.B persistent live system
instead of a live only system. This can be toggled interactively in
the main menu. Persistence is active only when you install from iso files.
It is expected to work only with Ubuntu, Ubuntu family 'flavours' and
community 're-spins' based on Ubuntu, for example Bento, Bodhi, LXLE,
ToriOS.
.TP 4
.B all
causes the selector to display all mass storage devices. The default is
to display only USB mass storage devices. This can be toggled
interactively, "toggle USB-only".
.TP 4
.B [-option]
.TP 4
.B -h
Print a summary of command line options and exit.
.TP 4
.B -v
Print the current version and exit.

.SH EXAMPLES

.TP 4
.B Make a USB install device from ISO or image file
.br
sudo -H mkusb
.br
sudo -H mkusb file.iso      # install a live only system
.br
sudo -H mkusb file.iso p    # install a persistent live system
.br
sudo mkusb-nox file.iso
.br
sudo -H mkusb "quote file name (1) with special characters.iso"
.br
sudo -H mkusb path/file.iso
.br
sudo -H mkusb file.img
.br
sudo -H mkusb file.img.gz
.br
sudo -H mkusb file.img.xz
.TP 4
.B Install from 'file.img.xz', show all mass storage devices
.br
sudo -H mkusb file.img.xz all
.TP 4
.B Clone a device (typically a CD/DVD drive or USB drive)
.br
sudo -H mkusb /dev/sr0    # example of CD drive
.TP 4
.B Wipe menu (short-cut directly to the wipe menu)
.br
sudo -H mkusb wipe
.TP 4
.B Wipe the USB device (may take long time)
.br
sudo -H mkusb wipe-whole-device
.TP 4
.B Wipe the first megabyte (MibiByte), show only USB devices
.br
sudo -H mkusb wipe-1
.TP 4
.B Wipe the first megabyte, show all mass storage devices
.br
sudo -H mkusb wipe-1 all
.TP 4
.B Help and Version
.br
mkusb -h
.br
mkusb -v

.SH SYSTEM FILES and LOG FILE
.TP 4
.B The desktop file is installed in /usr/share/applications
.br
mkusb.desktop             # desktop file to start mkusb
.TP 4
.B The following system files are installed in /usr/share/mkusb
.br
grub.cfg                  # to make persistent live system
.br 
maybe-problems.txt        # to make persistent live system
.br 
mkusb.cfg                 # for end user tweaks
.br
mkusb-start               # mkusb.desktop --> mkusb-start --> mkusb
.br
selected                  # for the selected image file
.br 
usb-pack_efi.tar.gz       # to make persistent live system
.TP 4
.B The 'console output' is redirected when started from the desktop file
.br
~/mkusb.log               # log file (in the user's home directory)

.SH AUTHOR
mkusb was written by Nio Wiklund <nio.wiklund at gmail.com>
.PP
This manual page was written by Nio Wiklund <nio.wiklund at gmail.com>

.SH THANKS

Special thanks for help with features, testing and packaging to
Dale Beaudoin,
Israel Dahl,
Paul Girault,
Kshipra Gurunandan,
Rafael Laguna,
Federico Leoni,
Cyrille Mattiuzzo,
Wirawan Purwanto,
Andre Rodovalho,
Joern Schoenyan,
Jack Trice,
Phill Whiteside.

.SH REPORTING BUGS
Report bugs to the author via mail.
.PP
When reporting bugs, please include a screenshot or cut and pasted text
from the dialogue preceding the failing event.

.SH COPYRIGHT
Copyright 2014,2015,2016 Nio Wiklund
.PP
GPLv3: GNU GPL version 3
<http://gnu.org/licenses/gpl.html>.
.PP
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
